<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>design.aem</groupId>
    <artifactId>aemdesign-archetype</artifactId>
    <version>1.0.93</version>
    <packaging>maven-archetype</packaging>

    <name>AEM.Design Project archetype</name>
    <description>AEM.Design project archetype.</description>
    <url>http://aem.design</url>

    <properties>
        <maven.site.plugin.version>3.7.1</maven.site.plugin.version>
    </properties>


    <developers>
        <developer>
            <email>max@aem.design</email>
            <name>Max Barrass</name>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:https://github.com/aem-design/aemdesign-archetype.git</connection>
        <url>https://github.com/aem-design/aemdesign-archetype</url>
    </scm>

    <issueManagement>
        <system>Github</system>
        <url>https://github.com/aem-design/aemdesign-archetype/issues</url>
    </issueManagement>

    <distributionManagement>
        <site>
            <id>api.wiki</id>
            <url>https://github.com/aem-design/aemdesign-archetype/wiki</url>
        </site>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <build>

        <extensions>
            <extension>
                <groupId>org.apache.maven.archetype</groupId>
                <artifactId>archetype-packaging</artifactId>
                <version>3.0.1</version>
            </extension>
        </extensions>

        <plugins>
            <!-- get git information to update artifacts version -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.5</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <!-- *NOTE*: The default phase of revision is initialize, but in case you want to change it, you can do so by adding the phase here -->
                        <!--<phase>initialize</phase>-->
                    </execution>
                    <execution>
                        <phase>validate</phase>
                        <id>validate-the-git-infos</id>
                        <goals>
                            <goal>validateRevision</goal>
                        </goals>
                        <!-- *NOTE*: The default phase of validateRevision is verify, but in case you want to change it, you can do so by adding the phase here -->
                        <!--<phase>package</phase>-->
                    </execution>
                </executions>
                <configuration>
                    <skipPoms>false</skipPoms>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                    <dateFormat>yyyy.MM.dd</dateFormat>
                    <gitDescribe>
                        <!--<always>true</always>-->
                        <dirty>-SNAPSHOT</dirty>
                        <!--<match>__null__</match>-->
                        <!--<tags>false</tags>-->
                    </gitDescribe>
                    <includeOnlyProperties>
                        <includeOnlyProperty>^git.closest.tag.name$</includeOnlyProperty>
                        <includeOnlyProperty>^git.closest.tag.commit.count$</includeOnlyProperty>
                    </includeOnlyProperties>
                </configuration>
            </plugin>


            <!-- update versions for all submodules -->
            <plugin>
                <!-- sets the version for each pom including children pom -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>set</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <!-- comes from the git-commit-id-plugin -->
                            <newVersion>${git.closest.tag.name}.${git.closest.tag.commit.count}</newVersion>
                            <generateBackupPoms>false</generateBackupPoms>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ensure all version variables names are set to updated version -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>change-version</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <scripts>
                                <script><![CDATA[
                            import org.apache.maven.artifact.versioning.VersionRange;

                            git_revision = '${git.closest.tag.name}.${git.closest.tag.commit.count}'
                            if (! project.properties['revision']?.trim()) {
                            println 'Change `version` to ' + git_revision
                            System.properties['revision'] = git_revision
                            project.properties['revision'] = git_revision
                            project.properties['project.version'] = git_revision
                            project.properties['git.build.version'] = git_revision
                            project.version = git_revision
                            project.artifact.version = git_revision
                            project.artifact.versionRange = VersionRange.createFromVersion(git_revision)
                            }
                            ]]></script>
                            </scripts>
                        </configuration>
                    </execution>

                    <!-- for debug: -->
                    <!--
                    <execution>
                    <id>dump-version</id>
                    <phase>package</phase>
                    <goals>
                    <goal>execute</goal>
                    </goals>
                    <configuration>
                    <scripts>
                    <script><![CDATA[
                    println System.properties['revision']
                    println '${revision}'
                    println '${project.version}'
                    println '${git.build.version}'
                    println project.version
                    println project.artifact
                    println project.artifact.version
                    println project.artifact.versionRange
                    ]]></script>
                    </scripts>
                    </configuration>
                    </execution>
                    -->
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>2.4.14</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- ensure all variables are set -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.0.1</version>
                <configuration>
                    <!-- <flattenMode>ossrh</flattenMode> -->
                    <flattenedPomFilename>.flattened-pom.xml</flattenedPomFilename>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>ossrh</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <!-- Required so that .gitignore gets included in archetypes; see https://issues.apache.org/jira/browse/MRESOURCES-190 -->
                    <addDefaultExcludes>false</addDefaultExcludes>
                </configuration>
            </plugin>
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
                <!--<version>2.15</version>-->
                <!--<configuration>-->
                    <!--<includes>**\/*.java,**\/*.xml</includes>-->
                    <!--<sourceDirectory>src/main/resources/archetype-resources</sourceDirectory>-->
                    <!--<configLocation>src/main/resources/checkstyle.xml</configLocation>-->
                    <!--<encoding>UTF-8</encoding>-->
                    <!--<consoleOutput>true</consoleOutput>-->
                    <!--<failsOnError>true</failsOnError>-->
                    <!--<linkXRef>false</linkXRef>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>checkstyle</id>-->
                        <!--<phase>verify</phase>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.plugin.version}</version>
                <configuration>
                    <locales>en</locales>
                </configuration>
            </plugin>
        </plugins>

        <!-- ensure all artifact names are set to updated version -->
        <finalName>${project.artifactId}-${git.closest.tag.name}.${git.closest.tag.commit.count}</finalName>


        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>


    <profiles>

        <!-- Activate using the release property: mvn clean install -Prelease -->
        <profile>
            <id>release</id>
            <activation>
                <property>
                    <name>release</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <!-- Skip maven-deploy-plugin use nexus-staging-maven-plugin instead -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <!-- To release to Maven central -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.8</version>
                        <extensions>true</extensions>
                        <configuration>
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                            <stagingProfileId>c4011210992a35</stagingProfileId>
                            <stagingDescription>travis pipeline https://travis-ci.org/aem-design/aemdesign-aem-core</stagingDescription>
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                            <autoDropAfterRelease>true</autoDropAfterRelease>
                        </configuration>
                    </plugin>
                    <!-- To generate javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.10.4</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- To sign the artifacts -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

            </build>
        </profile>

    </profiles>
</project>
